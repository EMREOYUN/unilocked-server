{"version":3,"file":"867.05d93b9dac83ce82.js","mappings":"+LAUO,IAAMA,EAAyB,MAAhC,MAAOA,EAITC,YACmDC,EACvCC,GADuCC,YACvCA,sBACT,CAEHC,WACID,KAAKE,MAAQF,KAAKG,kBAGlBC,WAAW,KACPJ,KAAKK,QAAQC,cAAcC,OAAK,EAExC,CAEOC,kBAAkBC,GACrBT,KAAKE,MAAQO,EAEbT,KAAKD,gBAAgBW,UAAUD,EACnC,CAEQN,kBACJ,IAAID,EAASF,KAAKF,MAAQE,KAAKF,KAAKI,OAAU,KAC9C,OAAIA,GAAqC,kBAA5BA,EAAMS,QAAQ,KAAM,MAAyBT,OAAQU,GAC3DV,CACX,CAACW,kDA5BQjB,GAAyBkB,MAKtBC,IAAkB,oDALrBnB,EAAyBoB,2SAAzBpB,CAAyB,iDCa/B,IAAMqB,EAAmB,MAA1B,MAAOA,EAAmBJ,SACrBb,gBAAa,CAChBkB,MAAOtB,GACViB,kDAHQI,EAAmB,sCAAnBA,IAAmBJ,wCAdxBM,KACAC,KACAC,IAGAC,eASKL,CAAmB","names":["ColorpickerPanelComponent","constructor","data","overlayPanelRef","this","ngOnInit","color","getInitialColor","setTimeout","trigger","nativeElement","click","emitSelectedEvent","value","emitValue","replace","undefined","static","core","OVERLAY_PANEL_DATA","selectors","BeColorPickerModule","panel","CommonModule","OverlayModule","TranslationsModule","MatIconModule"],"sourceRoot":"webpack:///","sources":["./src/common/ui/color-picker/colorpicker-panel.component.ts","./src/common/ui/color-picker/be-color-picker.module.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component, ElementRef, Inject, OnInit, Optional, ViewChild} from '@angular/core';\nimport {OverlayPanelRef} from '../overlay-panel/overlay-panel-ref';\nimport {OVERLAY_PANEL_DATA} from '../overlay-panel/overlay-panel-data';\n\n@Component({\n    templateUrl: './colorpicker-panel.component.html',\n    styleUrls: ['./colorpicker-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    \n})\nexport class ColorpickerPanelComponent implements OnInit {\n    @ViewChild('trigger', { static: true }) trigger: ElementRef<HTMLElement>;\n   public color: string;\n\n    constructor(\n        @Inject(OVERLAY_PANEL_DATA) @Optional() public data: {color?: string},\n        private overlayPanelRef: OverlayPanelRef,\n    ) {}\n\n    ngOnInit() {\n        this.color = this.getInitialColor();\n\n        // open color picker\n        setTimeout(() => {\n            this.trigger.nativeElement.click();\n        });\n    }\n\n    public emitSelectedEvent(value: string) {\n        this.color = value;\n        // const rgba = 'rgba(' + hexToRgb(value).join(',') + ')';\n        this.overlayPanelRef.emitValue(value);\n    }\n\n    private getInitialColor() {\n        let color = (this.data && this.data.color) || null;\n        if (color && color.replace(/ /g, '') === 'rgba(0,0,0,0)') color = undefined;\n        return color;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {ColorpickerPanelComponent} from './colorpicker-panel.component';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MatIconModule} from '@angular/material/icon';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        TranslationsModule,\n\n        // material\n        MatIconModule,\n    ],\n    declarations: [\n        ColorpickerPanelComponent,\n    ],\n    exports: [\n        ColorpickerPanelComponent,\n    ],\n})\nexport class BeColorPickerModule {\n    static components = {\n        panel: ColorpickerPanelComponent,\n    };\n}\n"],"x_google_ignoreList":[]}